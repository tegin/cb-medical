# Copyright 2023 CreuBlanca
# License AGPL-3.0 or later (https://www.gnu.org/licenses/agpl).

from odoo import _, fields, models
from odoo.exceptions import ValidationError


class MedicalPatient(models.Model):

    _inherit = "medical.patient"

    administrative_document_ids = fields.One2many(
        "medical.document.reference",
        inverse_name="patient_id",
        domain=[
            ("document_kind", "=", "administrative"),
            ("autogenerated", "=", False),
        ],
        readonly=True,
    )
    medical_document_ids = fields.One2many(
        "medical.document.reference",
        inverse_name="patient_id",
        domain=[("document_kind", "=", "medical"), ("autogenerated", "=", False)],
        readonly=True,
    )
    autogenerated_document_ids = fields.One2many(
        "medical.document.reference",
        inverse_name="patient_id",
        domain=[("autogenerated", "=", True)],
        readonly=True,
    )

    def _add_scanned_document(self, filename="", data=b"", document_type=False, **vals):
        if not document_type:
            raise ValidationError(_("Document type is required"))
        storage_file = self.env["storage.file"].create(
            {
                "data": data,
                "backend_id": document_type.storage_backend_id.id,
                "name": filename,
            }
        )
        new_vals = vals.copy()
        new_vals.update(
            {
                "storage_file_id": storage_file.id,
                "fhir_state": "current",
                "patient_id": self.id,
                "document_type_id": document_type.id,
            }
        )
        return self.env["medical.document.reference"].create(new_vals)

    def print_action(self):
        # TODO: ti make it work. It cannot be proven to work.
        return (
            self.env["ir.actions.report"]
            ._for_xml_id("cb_medical_document_autogenerate.medical_patient")
            .with_context(lang=self.lang, force_lang=self.lang)
            .report_action(
                self.autogenerated_document_ids,
                data=dict(dummy=True),
                config=False,
            )
        )
